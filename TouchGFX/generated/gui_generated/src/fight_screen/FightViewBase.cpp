/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/fight_screen/FightViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

FightViewBase::FightViewBase() :
    flexButtonCallback(this, &FightViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_PIXEL16_WITH_ELLIPSES_240X320_1_ID));
    add(background);

    boxWithBorder1.setPosition(0, 240, 240, 80);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(3);
    add(boxWithBorder1);

    box.setPosition(9, 247, 111, 64);
    box.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box);

    textArea1.setPosition(11, 255, 111, 48);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H0SC));
    add(textArea1);

    useFullHealText.setPosition(11, 255, 111, 48);
    useFullHealText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    useFullHealText.setLinespacing(0);
    useFullHealText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S8N9));
    useFullHealText.setVisible(false);
    add(useFullHealText);

    HealText.setPosition(11, 255, 111, 48);
    HealText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    HealText.setLinespacing(0);
    HealText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R24L));
    HealText.setVisible(false);
    add(HealText);

    DragonFearText.setPosition(6, 244, 109, 72);
    DragonFearText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    DragonFearText.setLinespacing(0);
    DragonFearText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5S7R));
    DragonFearText.setVisible(false);
    add(DragonFearText);

    ThunderText.setPosition(11, 255, 111, 48);
    ThunderText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    ThunderText.setLinespacing(0);
    ThunderText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MNHY));
    ThunderText.setVisible(false);
    add(ThunderText);

    useBomText.setPosition(11, 255, 111, 48);
    useBomText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    useBomText.setLinespacing(0);
    useBomText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3CUC));
    useBomText.setVisible(false);
    add(useBomText);

    usePotionText.setPosition(11, 255, 111, 48);
    usePotionText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    usePotionText.setLinespacing(0);
    usePotionText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7R6C));
    usePotionText.setVisible(false);
    add(usePotionText);

    ProtectText.setPosition(11, 255, 111, 48);
    ProtectText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    ProtectText.setLinespacing(0);
    ProtectText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GG7O));
    ProtectText.setVisible(false);
    add(ProtectText);

    Skill3Text.setPosition(11, 255, 111, 48);
    Skill3Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Skill3Text.setLinespacing(0);
    Skill3Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P7LK));
    Skill3Text.setVisible(false);
    add(Skill3Text);

    StunText.setPosition(11, 255, 111, 48);
    StunText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    StunText.setLinespacing(0);
    StunText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JWKI));
    StunText.setVisible(false);
    add(StunText);

    FearText.setPosition(11, 255, 111, 48);
    FearText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    FearText.setLinespacing(0);
    FearText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6O4S));
    FearText.setVisible(false);
    add(FearText);

    Skill2Text.setPosition(6, 255, 114, 48);
    Skill2Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Skill2Text.setLinespacing(0);
    Skill2Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J0PW));
    Skill2Text.setVisible(false);
    add(Skill2Text);

    Skill1Text.setPosition(11, 255, 111, 48);
    Skill1Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Skill1Text.setLinespacing(0);
    Skill1Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7PU6));
    Skill1Text.setVisible(false);
    add(Skill1Text);

    shape1.setPosition(110, 172, 125, 38);
    shape1.setOrigin(0.0f, 0.0f);
    shape1.setScale(1.0f, 1.0f);
    shape1.setAngle(0.0f);
    shape1Painter.setColor(touchgfx::Color::getColorFromRGB(7, 45, 94));
    shape1.setPainter(shape1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1Points[4] = { { 20.0f, 0.0f }, { 160.0f, 0.0f }, { 130.0f, 40.0f }, { 0.0f, 45.0f } };
    shape1.setShape(shape1Points);
    add(shape1);

    shape1_1.setPosition(9, 43, 170, 36);
    shape1_1.setOrigin(0.0f, 0.0f);
    shape1_1.setScale(1.0f, 1.0f);
    shape1_1.setAngle(0.0f);
    shape1_1Painter.setColor(touchgfx::Color::getColorFromRGB(7, 45, 94));
    shape1_1.setPainter(shape1_1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1_1Points[4] = { { -10.0f, 0.0f }, { 100.0f, 0.0f }, { 120.0f, 50.0f }, { 10.0f, 40.0f } };
    shape1_1.setShape(shape1_1Points);
    add(shape1_1);

    box1.setPosition(0, 37, 120, 33);
    box1.setColor(touchgfx::Color::getColorFromRGB(237, 232, 218));
    add(box1);

    box1_1.setPosition(117, 160, 119, 40);
    box1_1.setColor(touchgfx::Color::getColorFromRGB(237, 232, 218));
    add(box1_1);

    pokemon2.setXY(126, 30);
    pokemon2.setBitmap(touchgfx::Bitmap(BITMAP_MEGARA_MIN_ID));
    add(pokemon2);

    DragonBeam.setXY(70, 89);
    DragonBeam.setBitmap(touchgfx::Bitmap(BITMAP_SKILL_ICON_80X100_ID));
    DragonBeam.setVisible(false);
    add(DragonBeam);

    pokemon1.setXY(30, 160);
    pokemon1.setBitmap(touchgfx::Bitmap(BITMAP_MEGAX_MIN_ID));
    add(pokemon1);

    FightButton.setBoxWithBorderPosition(0, 0, 57, 33);
    FightButton.setBorderSize(5);
    FightButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    FightButton.setAction(flexButtonCallback);
    FightButton.setPosition(124, 247, 57, 33);
    add(FightButton);

    runButton.setBoxWithBorderPosition(0, 0, 60, 63);
    runButton.setBorderSize(5);
    runButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    runButton.setAction(flexButtonCallback);
    runButton.setPosition(180, 247, 60, 63);
    add(runButton);

    image1.setXY(124, 247);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_FIGHT_BUTTON_ID));
    add(image1);

    run.setXY(181, 248);
    run.setBitmap(touchgfx::Bitmap(BITMAP_RUN_BUTTON_57X64_ID));
    add(run);

    BagButton.setBoxWithBorderPosition(0, 0, 57, 32);
    BagButton.setBorderSize(5);
    BagButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    BagButton.setAction(flexButtonCallback);
    BagButton.setPosition(124, 279, 57, 32);
    add(BagButton);

    image3.setXY(124, 280);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_BAG_BUTTON_57X32_ID));
    add(image3);

    boxProgress1.setXY(20, 54);
    boxProgress1.setProgressIndicatorPosition(0, 0, 100, 10);
    boxProgress1.setRange(0, 150);
    boxProgress1.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    boxProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BOXPROGRESS_NORMAL_TINY_ID));
    boxProgress1.setColor(touchgfx::Color::getColorFromRGB(22, 222, 62));
    boxProgress1.setValue(150);
    add(boxProgress1);

    boxProgress1_2.setXY(135, 179);
    boxProgress1_2.setProgressIndicatorPosition(0, 0, 100, 10);
    boxProgress1_2.setRange(0, 150);
    boxProgress1_2.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    boxProgress1_2.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BOXPROGRESS_NORMAL_TINY_ID));
    boxProgress1_2.setColor(touchgfx::Color::getColorFromRGB(22, 222, 62));
    boxProgress1_2.setValue(150);
    add(boxProgress1_2);

    textArea2.setXY(2, 37);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BDM5));
    add(textArea2);

    textArea2_1.setXY(117, 160);
    textArea2_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2_1.setLinespacing(0);
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4QI6));
    add(textArea2_1);

    textArea3.setXY(2, 53);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MASV));
    add(textArea3);

    textArea3_1.setXY(117, 178);
    textArea3_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3_1.setLinespacing(0);
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C5G0));
    add(textArea3_1);

    HP.setPosition(217, 189, 18, 12);
    HP.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    HP.setLinespacing(0);
    Unicode::snprintf(HPBuffer, HP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E2BL).getText());
    HP.setWildcard(HPBuffer);
    HP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TZCP));
    add(HP);

    boxWithBorder2.setPosition(0, 240, 120, 80);
    boxWithBorder2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder2.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2.setBorderSize(5);
    boxWithBorder2.setVisible(false);
    add(boxWithBorder2);

    Skill1Button.setBoxWithBorderPosition(0, 0, 120, 26);
    Skill1Button.setBorderSize(5);
    Skill1Button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Skill1Button.setVisible(false);
    Skill1Button.setAction(flexButtonCallback);
    Skill1Button.setPosition(2, 242, 120, 26);
    add(Skill1Button);

    Skill_1.setPosition(9, 244, 97, 21);
    Skill_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Skill_1.setLinespacing(0);
    Skill_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B7NH));
    Skill_1.setVisible(false);
    add(Skill_1);

    Skill2Button.setBoxWithBorderPosition(0, 0, 120, 26);
    Skill2Button.setBorderSize(5);
    Skill2Button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Skill2Button.setVisible(false);
    Skill2Button.setAction(flexButtonCallback);
    Skill2Button.setPosition(2, 267, 120, 26);
    add(Skill2Button);

    Skill_2.setPosition(9, 271, 97, 24);
    Skill_2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Skill_2.setLinespacing(0);
    Skill_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KJ2L));
    Skill_2.setVisible(false);
    add(Skill_2);

    Skill3Button.setBoxWithBorderPosition(0, 0, 120, 27);
    Skill3Button.setBorderSize(5);
    Skill3Button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Skill3Button.setVisible(false);
    Skill3Button.setAction(flexButtonCallback);
    Skill3Button.setPosition(2, 292, 120, 27);
    add(Skill3Button);

    Skill_3.setPosition(11, 293, 97, 18);
    Skill_3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Skill_3.setLinespacing(0);
    Skill_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2IF6));
    Skill_3.setVisible(false);
    add(Skill_3);

    stun.setXY(87, 37);
    stun.setBitmap(touchgfx::Bitmap(BITMAP_BOOM_14X12_ID));
    stun.setVisible(false);
    add(stun);

    fear.setXY(162, 160);
    fear.setBitmap(touchgfx::Bitmap(BITMAP_FEAR_14X12_ID));
    fear.setVisible(false);
    add(fear);

    fire1.setXY(85, 146);
    fire1.setBitmap(touchgfx::Bitmap(BITMAP_FIREBALL1_ID));
    fire1.setVisible(false);
    add(fire1);

    fire2.setXY(101, 115);
    fire2.setBitmap(touchgfx::Bitmap(BITMAP_FIREBALL2_ID));
    fire2.setVisible(false);
    add(fire2);

    fire3.setXY(124, 79);
    fire3.setBitmap(touchgfx::Bitmap(BITMAP_FIREBALL3_ID));
    fire3.setVisible(false);
    add(fire3);

    shiled.setXY(50, 117);
    shiled.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
    shiled.setVisible(false);
    add(shiled);

    shieldBreak.setXY(50, 112);
    shieldBreak.setBitmap(touchgfx::Bitmap(BITMAP_BREAK_ID));
    shieldBreak.setVisible(false);
    add(shieldBreak);

    PlayerPointer.setPosition(-18, 184, 40, 42);
    PlayerPointer.setOrigin(0.0f, 0.0f);
    PlayerPointer.setScale(1.0f, 1.0f);
    PlayerPointer.setAngle(0.0f);
    PlayerPointerPainter.setColor(touchgfx::Color::getColorFromRGB(252, 0, 0));
    PlayerPointer.setPainter(PlayerPointerPainter);
    const touchgfx::AbstractShape::ShapePoint<float> PlayerPointerPoints[3] = { { 20.0f, 0.0f }, { 40.0f, 20.0f }, { 20.0f, 40.0f } };
    PlayerPointer.setShape(PlayerPointerPoints);
    add(PlayerPointer);

    BossPointer.setPosition(220, 53, 30, 42);
    BossPointer.setOrigin(0.0f, 0.0f);
    BossPointer.setScale(1.0f, 1.0f);
    BossPointer.setAngle(0.0f);
    BossPointerPainter.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    BossPointer.setPainter(BossPointerPainter);
    const touchgfx::AbstractShape::ShapePoint<float> BossPointerPoints[3] = { { 20.0f, 0.0f }, { 20.0f, 40.0f }, { 0.0f, 20.0f } };
    BossPointer.setShape(BossPointerPoints);
    BossPointer.setVisible(false);
    add(BossPointer);

    Bag.setPosition(0, 0, 240, 320);
    Bag.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Bag.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Bag.setBorderSize(5);
    Bag.setVisible(false);
    add(Bag);

    PotionButton.setBoxWithBorderPosition(0, 0, 240, 90);
    PotionButton.setBorderSize(5);
    PotionButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    PotionButton.setVisible(false);
    PotionButton.setAction(flexButtonCallback);
    PotionButton.setPosition(0, 0, 240, 90);
    add(PotionButton);

    FullHealButton.setBoxWithBorderPosition(0, 0, 240, 90);
    FullHealButton.setBorderSize(5);
    FullHealButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    FullHealButton.setVisible(false);
    FullHealButton.setAction(flexButtonCallback);
    FullHealButton.setPosition(0, 94, 240, 90);
    add(FullHealButton);

    PotionText.setXY(66, 14);
    PotionText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    PotionText.setLinespacing(0);
    PotionText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZQ2E));
    PotionText.setVisible(false);
    add(PotionText);

    FullHealText.setXY(62, 102);
    FullHealText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    FullHealText.setLinespacing(0);
    FullHealText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5JGS));
    FullHealText.setVisible(false);
    add(FullHealText);

    BomButton.setBoxWithBorderPosition(0, 0, 240, 90);
    BomButton.setBorderSize(5);
    BomButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    BomButton.setVisible(false);
    BomButton.setAction(flexButtonCallback);
    BomButton.setPosition(0, 188, 240, 90);
    add(BomButton);

    BomText.setXY(53, 191);
    BomText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    BomText.setLinespacing(0);
    BomText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DPUF));
    BomText.setVisible(false);
    add(BomText);

    FullHeal.setXY(4, 98);
    FullHeal.setBitmap(touchgfx::Bitmap(BITMAP_E0C4AAE7_FCC6_4B2E_8C0C_785F881ACF66_ID));
    FullHeal.setVisible(false);
    add(FullHeal);

    Potion.setXY(11, 6);
    Potion.setBitmap(touchgfx::Bitmap(BITMAP_POTION_ID));
    Potion.setVisible(false);
    add(Potion);

    HideBagButton.setBoxWithBorderPosition(0, 0, 240, 41);
    HideBagButton.setBorderSize(5);
    HideBagButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    HideBagButton.setVisible(false);
    HideBagButton.setAction(flexButtonCallback);
    HideBagButton.setPosition(0, 279, 240, 41);
    add(HideBagButton);

    HideBagText.setXY(84, 284);
    HideBagText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    HideBagText.setLinespacing(0);
    HideBagText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WVWU));
    HideBagText.setVisible(false);
    add(HideBagText);

    Bom.setXY(-14, 191);
    Bom.setBitmap(touchgfx::Bitmap(BITMAP_BOM_ID));
    Bom.setVisible(false);
    add(Bom);

    bom.setXY(20, 190);
    bom.setBitmap(touchgfx::Bitmap(BITMAP_BOM2_ID));
    bom.setVisible(false);
    add(bom);

    phatNo.setXY(100, 37);
    phatNo.setBitmap(touchgfx::Bitmap(BITMAP_NO1_ID));
    phatNo.setVisible(false);
    add(phatNo);

    thunder.setXY(60, 127);
    thunder.setBitmap(touchgfx::Bitmap(BITMAP_LIGHTNING_ICON_15X102_ID));
    thunder.setVisible(false);
    add(thunder);

    cloud.setXY(16, 111);
    cloud.setBitmap(touchgfx::Bitmap(BITMAP_CLOUD_ICON_106X32_ID));
    cloud.setVisible(false);
    add(cloud);

    DragonEye2.setXY(30, 100);
    DragonEye2.setBitmap(touchgfx::Bitmap(BITMAP_CLOSED_EYE_ID));
    DragonEye2.setVisible(false);
    add(DragonEye2);

    DragonEye.setXY(30, 98);
    DragonEye.setBitmap(touchgfx::Bitmap(BITMAP_RESIZED_IMAGE_80X80_ID));
    DragonEye.setVisible(false);
    add(DragonEye);

    vaCham.setXY(80, 37);
    vaCham.setBitmap(touchgfx::Bitmap(BITMAP_NO1_ID));
    vaCham.setVisible(false);
    add(vaCham);

    heal.setXY(135, 40);
    heal.setBitmap(touchgfx::Bitmap(BITMAP_RESIZED_HEALTH_ICONS_60X60_ID));
    heal.setVisible(false);
    add(heal);

    playerHeal.setXY(36, 172);
    playerHeal.setBitmap(touchgfx::Bitmap(BITMAP_RESIZED_HEALTH_ICONS_60X60_ID));
    playerHeal.setVisible(false);
    add(playerHeal);

    purification.setXY(36, 175);
    purification.setBitmap(touchgfx::Bitmap(BITMAP_BLING_60X60_1_ID));
    purification.setVisible(false);
    add(purification);

    Victory.setXY(0, 0);
    Victory.setBitmap(touchgfx::Bitmap(BITMAP_VICTORY_240X320_1_ID));
    Victory.setVisible(false);
    add(Victory);

    Defeat.setXY(0, 0);
    Defeat.setBitmap(touchgfx::Bitmap(BITMAP_DEFEAT_240X320_ID));
    Defeat.setVisible(false);
    add(Defeat);

    home.setBoxWithBorderPosition(0, 0, 50, 50);
    home.setBorderSize(5);
    home.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(1, 12, 18), touchgfx::Color::getColorFromRGB(199, 226, 235), touchgfx::Color::getColorFromRGB(247, 249, 250), touchgfx::Color::getColorFromRGB(159, 180, 201));
    home.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    home.setIconXY(0, 0);
    home.setVisible(false);
    home.setAction(flexButtonCallback);
    home.setPosition(94, 197, 50, 50);
    add(home);

    selectLevel.setXY(0, 0);
    selectLevel.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_240X320_ID));
    add(selectLevel);

    level1.setBoxWithBorderPosition(0, 0, 155, 50);
    level1.setBorderSize(5);
    level1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    level1.setBitmaps(Bitmap(BITMAP_EASY_ID), Bitmap(BITMAP_EASY_ID));
    level1.setBitmapXY(0, 0);
    level1.setAction(flexButtonCallback);
    level1.setPosition(41, 43, 155, 50);
    add(level1);

    level2.setBoxWithBorderPosition(0, 0, 155, 50);
    level2.setBorderSize(5);
    level2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    level2.setBitmaps(Bitmap(BITMAP_MEDIUM_BOX_ID), Bitmap(BITMAP_MEDIUM_BOX_ID));
    level2.setBitmapXY(0, 0);
    level2.setAction(flexButtonCallback);
    level2.setPosition(43, 135, 155, 50);
    add(level2);

    level3.setBoxWithBorderPosition(0, 0, 155, 50);
    level3.setBorderSize(5);
    level3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    level3.setBitmaps(Bitmap(BITMAP_HARD_BOX_ID), Bitmap(BITMAP_HARD_BOX_ID));
    level3.setBitmapXY(0, 0);
    level3.setAction(flexButtonCallback);
    level3.setPosition(43, 222, 155, 50);
    add(level3);

    mouse.setXY(1, 0);
    mouse.setBitmap(touchgfx::Bitmap(BITMAP_POKEBALL_12X12_ID));
    add(mouse);
}

FightViewBase::~FightViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void FightViewBase::setupScreen()
{

}

void FightViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &runButton)
    {
        //Interaction1
        //When runButton clicked change screen to StartGame
        //Go to StartGame with no screen transition
        application().gotoStartGameScreenNoTransition();
    }
    if (&src == &FightButton)
    {
        //Interaction2
        //When FightButton clicked call virtual function
        //Call Fight
        Fight();
    }
    if (&src == &Skill1Button)
    {
        //Interaction3
        //When Skill1Button clicked call virtual function
        //Call FireBlast
        FireBlast();
    }
    if (&src == &Skill2Button)
    {
        //Interaction4
        //When Skill2Button clicked call virtual function
        //Call DragonRage
        DragonRage();
    }
    if (&src == &Skill3Button)
    {
        //Interaction5
        //When Skill3Button clicked call virtual function
        //Call Protect
        Protect();
    }
    if (&src == &BagButton)
    {
        //Interaction6
        //When BagButton clicked call virtual function
        //Call ShowBag
        ShowBag();
    }
    if (&src == &BomButton)
    {
        //Interaction7
        //When BomButton clicked call virtual function
        //Call useBom
        useBom();
    }
    if (&src == &FullHealButton)
    {
        //Interaction8
        //When FullHealButton clicked call virtual function
        //Call useFullHeal
        useFullHeal();
    }
    if (&src == &PotionButton)
    {
        //Interaction9
        //When PotionButton clicked call virtual function
        //Call usePotion
        usePotion();
    }
    if (&src == &HideBagButton)
    {
        //Interaction10
        //When HideBagButton clicked call virtual function
        //Call HideBag
        HideBag();
    }
    if (&src == &home)
    {
        //Interaction11
        //When home clicked change screen to StartGame
        //Go to StartGame with no screen transition
        application().gotoStartGameScreenNoTransition();
    }
    if (&src == &level1)
    {
        //Interaction12
        //When level1 clicked call virtual function
        //Call Level1
        Level1();
    }
    if (&src == &level2)
    {
        //Interaction13
        //When level2 clicked call virtual function
        //Call Level2
        Level2();
    }
    if (&src == &level3)
    {
        //Interaction14
        //When level3 clicked call virtual function
        //Call Level3
        Level3();
    }
}
